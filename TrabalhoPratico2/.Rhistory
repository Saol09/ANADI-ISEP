# Definir diretório de trabalho
setwd("C:/Users/kefil/OneDrive/Documentos/anadi_1200625_1200628_1200882/TrabalhoPratico2")
# Bibliotecas
library(readr)
library(ggplot2)
library(dplyr)
library(lubridate)
library(reshape2)
library(corrplot)
library(neuralnet)
library(caret)
library(rpart)
library(rpart.plot)
library(neuralnet)
# Ex1: Ler o arquivo CSV
ciclismo <- read.csv("ciclismo.csv", header = TRUE, sep = ",")
# One hot encoding
colunas_categoricas <- c("Team", "Background", "Continent")
dummy_obj <- dummyVars(~., data = ciclismo[, colunas_categoricas])
dados_encoded <- predict(dummy_obj, newdata = ciclismo)
# Transformar os dados encoded em dataframe
ciclismo_encoded <- as.data.frame(dados_encoded)
# Adicionar os atributos numéricos do dataframe ciclismo ao dataframe ciclismo_encoded
ciclismo_encoded$altitude_results <- ciclismo$altitude_results
ciclismo_encoded$vo2_results <- ciclismo$vo2_results
ciclismo_encoded$hr_results <- ciclismo$hr_results
ciclismo_encoded$age <- ciclismo$age
ciclismo_encoded$gender= ciclismo$gender
ciclismo_encoded$ProLevel = ciclismo$ProLevel
ciclismo_encoded$WinterTrainingCamp = ciclismo$WinterTrainingCamp
# Renomeando as colunas do dataframe
colnames(ciclismo_encoded) <- c( 'TeamgroupA', 'TeamgroupB', 'TeamgroupC', 'TeamgroupD', 'TeamgroupE', 'BackgroundCobblestones', 'BackgroundHill',
'BackgroundMountain','BackgroundNone','BackgroundSprinter','BackgroundTimeTrial','ContinentAfrica','ContinentAsia','ContinentAustralia',
'ContinentEurope','ContinentNorthAmerica','ContinentSouthAmerica','altitude_results','vo2_results', 'hr_results', 'age', 'gender')
# Renomeando as colunas do dataframe
colnames(ciclismo_encoded) <- c('TeamgroupA', 'TeamgroupB', 'TeamgroupC', 'TeamgroupD', 'TeamgroupE', 'BackgroundCobblestones', 'BackgroundHill',
'BackgroundMountain', 'BackgroundNone', 'BackgroundSprinter', 'BackgroundTimeTrial', 'ContinentAfrica',
'ContinentAsia', 'ContinentAustralia', 'ContinentEurope', 'ContinentNorthAmerica', 'ContinentSouthAmerica',
'altitude_results', 'vo2_results', 'hr_results', 'age', 'gender')
# Renomeando as colunas do dataframe
colnames(ciclismo_encoded) <- c('TeamgroupA', 'TeamgroupB', 'TeamgroupC', 'TeamgroupD', 'TeamgroupE', 'BackgroundCobblestones', 'BackgroundHill',
'BackgroundMountain', 'BackgroundNone', 'BackgroundSprinter', 'BackgroundTimeTrial', 'ContinentAfrica',
'ContinentAsia', 'ContinentAustralia', 'ContinentEurope', 'ContinentNorthAmerica', 'ContinentSouthAmerica',
'altitude_results', 'vo2_results', 'hr_results', 'age')
# garantir a reprodutibilidade dos resultados
set.seed(123)
# dataset exercício 3
datasetEx3 <- ciclismo_encoded
colnames(datasetEx3) <- c( 'TeamgroupA', 'TeamgroupB', 'TeamgroupC', 'TeamgroupD', 'TeamgroupE', 'BackgroundCobblestones', 'BackgroundHill',
'BackgroundMountain','BackgroundNone','BackgroundSprinter','BackgroundTimeTrial','ContinentAfrica','ContinentAsia','ContinentAustralia',
'ContinentEurope','ContinentNorthAmerica','ContinentSouthAmerica','altitude_results','vo2_results', 'hr_results', 'age', 'gender','ProLevel',
'WinterTrainingCamp')
# dataset exercício 3
datasetEx3 <- ciclismo_encoded
colnames(datasetEx3) <- c('TeamgroupA', 'TeamgroupB', 'TeamgroupC', 'TeamgroupD', 'TeamgroupE', 'BackgroundCobblestones', 'BackgroundHill',
'BackgroundMountain', 'BackgroundNone', 'BackgroundSprinter', 'BackgroundTimeTrial', 'ContinentAfrica',
'ContinentAsia', 'ContinentAustralia', 'ContinentEurope', 'ContinentNorthAmerica', 'ContinentSouthAmerica',
'altitude_results', 'vo2_results', 'hr_results', 'age', 'gender', 'ProLevel', 'WinterTrainingCamp')
# dataset exercício 3
datasetEx3 <- ciclismo_encoded
colnames(datasetEx3) <- c('TeamgroupA', 'TeamgroupB', 'TeamgroupC', 'TeamgroupD', 'TeamgroupE', 'BackgroundCobblestones', 'BackgroundHill',
'BackgroundMountain', 'BackgroundNone', 'BackgroundSprinter', 'BackgroundTimeTrial', 'ContinentAfrica',
'ContinentAsia', 'ContinentAustralia', 'ContinentEurope', 'ContinentNorthAmerica', 'ContinentSouthAmerica',
'altitude_results', 'vo2_results', 'hr_results', 'age', 'gender', 'ProLevel', 'WinterTrainingCamp')
# dataset exercício 3
datasetEx3 <- ciclismo_encoded[, c('TeamgroupA', 'TeamgroupB', 'TeamgroupC', 'TeamgroupD', 'TeamgroupE', 'BackgroundCobblestones', 'BackgroundHill',
'BackgroundMountain', 'BackgroundNone', 'BackgroundSprinter', 'BackgroundTimeTrial', 'ContinentAfrica',
'ContinentAsia', 'ContinentAustralia', 'ContinentEurope', 'ContinentNorthAmerica', 'ContinentSouthAmerica',
'altitude_results', 'vo2_results', 'hr_results', 'age', 'gender')]
colnames(datasetEx3) <- c('TeamgroupA', 'TeamgroupB', 'TeamgroupC', 'TeamgroupD', 'TeamgroupE', 'BackgroundCobblestones', 'BackgroundHill',
'BackgroundMountain', 'BackgroundNone', 'BackgroundSprinter', 'BackgroundTimeTrial', 'ContinentAfrica',
'ContinentAsia', 'ContinentAustralia', 'ContinentEurope', 'ContinentNorthAmerica', 'ContinentSouthAmerica',
'altitude_results', 'vo2_results', 'hr_results', 'age', 'gender')
# Definir diretório de trabalho
setwd("C:/Users/kefil/OneDrive/Documentos/anadi_1200625_1200628_1200882/TrabalhoPratico2")
# Bibliotecas
library(readr)
library(ggplot2)
library(dplyr)
library(lubridate)
library(reshape2)
library(corrplot)
library(neuralnet)
library(caret)
library(rpart)
library(rpart.plot)
library(neuralnet)
# Ex1: Ler o arquivo CSV
ciclismo <- read.csv("ciclismo.csv", header = TRUE, sep = ",")
# One hot encoding
colunas_categoricas <- c("Team", "Background", "Continent")
dummy_obj <- dummyVars(~., data = ciclismo[, colunas_categoricas])
dados_encoded <- predict(dummy_obj, newdata = ciclismo)
# Transformar os dados encoded em dataframe
ciclismo_encoded <- as.data.frame(dados_encoded)
# Adicionar os atributos numéricos do dataframe ciclismo ao dataframe ciclismo_encoded
ciclismo_encoded$altitude_results <- ciclismo$altitude_results
ciclismo_encoded$vo2_results <- ciclismo$vo2_results
ciclismo_encoded$hr_results <- ciclismo$hr_results
ciclismo_encoded$age <- ciclismo$age
ciclismo_encoded$gender= ciclismo$gender
ciclismo_encoded$ProLevel = ciclismo$ProLevel
ciclismo_encoded$WinterTrainingCamp = ciclismo$WinterTrainingCamp
# Renomeando as colunas do dataframe
colnames(ciclismo_encoded) <- c('TeamgroupA', 'TeamgroupB', 'TeamgroupC', 'TeamgroupD', 'TeamgroupE', 'BackgroundCobblestones', 'BackgroundHill',
'BackgroundMountain', 'BackgroundNone', 'BackgroundSprinter', 'BackgroundTimeTrial', 'ContinentAfrica',
'ContinentAsia', 'ContinentAustralia', 'ContinentEurope', 'ContinentNorthAmerica', 'ContinentSouthAmerica',
'altitude_results', 'vo2_results', 'hr_results', 'age')
# garantir a reprodutibilidade dos resultados
set.seed(123)
# dataset exercício 3
datasetEx3 <- ciclismo_encoded
colnames(datasetEx3) <- c('TeamgroupA', 'TeamgroupB', 'TeamgroupC', 'TeamgroupD', 'TeamgroupE', 'BackgroundCobblestones', 'BackgroundHill',
'BackgroundMountain', 'BackgroundNone', 'BackgroundSprinter', 'BackgroundTimeTrial', 'ContinentAfrica',
'ContinentAsia', 'ContinentAustralia', 'ContinentEurope', 'ContinentNorthAmerica', 'ContinentSouthAmerica',
'altitude_results', 'vo2_results', 'hr_results', 'age', 'gender', 'ProLevel', 'WinterTrainingCamp')
View(datasetEx3)
View(datasetEx3)
# dataset exercício 3
datasetEx3 <- ciclismo_encoded
colnames(datasetEx3) <- c('TeamgroupA', 'TeamgroupB', 'TeamgroupC', 'TeamgroupD', 'TeamgroupE', 'BackgroundCobblestones', 'BackgroundHill',
'BackgroundMountain', 'BackgroundNone', 'BackgroundSprinter', 'BackgroundTimeTrial', 'ContinentAfrica',
'ContinentAsia', 'ContinentAustralia', 'ContinentEurope', 'ContinentNorthAmerica', 'ContinentSouthAmerica',
'altitude_results', 'vo2_results', 'hr_results', 'age', 'gender')
# dataset exercício 3
datasetEx3 <- ciclismo_encoded
colnames(datasetEx3) <- c('TeamgroupA', 'TeamgroupB', 'TeamgroupC', 'TeamgroupD', 'TeamgroupE', 'BackgroundCobblestones', 'BackgroundHill',
'BackgroundMountain', 'BackgroundNone', 'BackgroundSprinter', 'BackgroundTimeTrial', 'ContinentAfrica',
'ContinentAsia', 'ContinentAustralia', 'ContinentEurope', 'ContinentNorthAmerica', 'ContinentSouthAmerica',
'altitude_results', 'vo2_results', 'hr_results', 'age')
datasetEx3.norm <- as.data.frame(lapply(datasetEx3, normalise))
# Padronizar as variáveis numéricas
datasetEx3.norm <- as.data.frame(scale(datasetEx3[, c('altitude_results', 'vo2_results', 'hr_results', 'age')]))
# Definir diretório de trabalho
setwd("C:/Users/kefil/OneDrive/Documentos/anadi_1200625_1200628_1200882/TrabalhoPratico2")
# Bibliotecas
library(readr)
library(ggplot2)
library(dplyr)
library(lubridate)
library(reshape2)
library(corrplot)
library(neuralnet)
library(caret)
library(rpart)
library(rpart.plot)
library(neuralnet)
# Ex1: Ler o arquivo CSV
ciclismo <- read.csv("ciclismo.csv", header = TRUE, sep = ",")
# One hot encoding
colunas_categoricas <- c("Team", "Background", "Continent")
dummy_obj <- dummyVars(~., data = ciclismo[, colunas_categoricas])
dados_encoded <- predict(dummy_obj, newdata = ciclismo)
# Transformar os dados encoded em dataframe
ciclismo_encoded <- as.data.frame(dados_encoded)
# Adicionar os atributos numéricos do dataframe ciclismo ao dataframe ciclismo_encoded
ciclismo_encoded$altitude_results <- ciclismo$altitude_results
ciclismo_encoded$vo2_results <- ciclismo$vo2_results
ciclismo_encoded$hr_results <- ciclismo$hr_results
ciclismo_encoded$age <- ciclismo$age
ciclismo_encoded$gender= ciclismo$gender
ciclismo_encoded$ProLevel = ciclismo$ProLevel
ciclismo_encoded$WinterTrainingCamp = ciclismo$WinterTrainingCamp
# Renomeando as colunas do dataframe
colnames(ciclismo_encoded) <- c('TeamgroupA', 'TeamgroupB', 'TeamgroupC', 'TeamgroupD', 'TeamgroupE', 'BackgroundCobblestones', 'BackgroundHill',
'BackgroundMountain', 'BackgroundNone', 'BackgroundSprinter', 'BackgroundTimeTrial', 'ContinentAfrica',
'ContinentAsia', 'ContinentAustralia', 'ContinentEurope', 'ContinentNorthAmerica', 'ContinentSouthAmerica',
'altitude_results', 'vo2_results', 'hr_results', 'age')
# garantir a reprodutibilidade dos resultados
set.seed(123)
# dataset exercício 3
datasetEx3 <- ciclismo_encoded
colnames(datasetEx3) <- c('TeamgroupA', 'TeamgroupB', 'TeamgroupC', 'TeamgroupD', 'TeamgroupE', 'BackgroundCobblestones', 'BackgroundHill',
'BackgroundMountain', 'BackgroundNone', 'BackgroundSprinter', 'BackgroundTimeTrial', 'ContinentAfrica',
'ContinentAsia', 'ContinentAustralia', 'ContinentEurope', 'ContinentNorthAmerica', 'ContinentSouthAmerica',
'altitude_results', 'vo2_results', 'hr_results', 'age')
# Verificar o tipo de dados das colunas
sapply(datasetEx3[, c('altitude_results', 'vo2_results', 'hr_results', 'age')], class)
# Converter uma coluna para numérica
datasetEx3$altitude_results <- as.numeric(datasetEx3$altitude_results)
# Padronizar as variáveis numéricas
datasetEx3.norm <- as.data.frame(scale(datasetEx3[, c('altitude_results', 'vo2_results', 'hr_results', 'age')]))
# Convert the "age" column to numeric
datasetEx3$age <- as.numeric(datasetEx3$age)
# Check the type of data in the columns
sapply(datasetEx3[, c('altitude_results', 'vo2_results', 'hr_results', 'age')], class)
# Padronize the numeric variables
datasetEx3.norm <- as.data.frame(scale(datasetEx3[, c('altitude_results', 'vo2_results', 'hr_results', 'age')]))
sample <- sample(c(TRUE, FALSE), nrow(datasetEx3.norm), replace=TRUE, prob=c(0.7,0.3))
datasetEx3.norm.train <- datasetEx3.norm[sample,]
datasetEx3.norm.test <- datasetEx3.norm[!sample,]
train_labels <- datasetEx3.norm[sample, "gender"]
test_labels <- datasetEx3.norm[!sample, "gender"]
#-------------------------------
# 1 internal node
numnodes <- 1
nn_formula <- as.formula("gender ~ TeamgroupA + TeamgroupB + TeamgroupC + TeamgroupD + TeamgroupE + BackgroundCobblestones + BackgroundHill + BackgroundMountain +
BackgroundNone + BackgroundSprinter + BackgroundTimeTrial +
ContinentAfrica + ContinentAsia + ContinentAustralia + ContinentEurope + ContinentNorthAmerica + ContinentSouthAmerica + altitude_results + vo2_results +
hr_results + age + ProLevel + WinterTrainingCamp")
nn.model <-
neuralnet(
nn_formula,
data = datasetEx3.norm.train,
hidden = numnodes,
stepmax=1e7
)
# Definir diretório de trabalho
setwd("C:/Users/kefil/OneDrive/Documentos/anadi_1200625_1200628_1200882/TrabalhoPratico2")
# Bibliotecas
library(readr)
library(ggplot2)
library(dplyr)
library(lubridate)
library(reshape2)
library(corrplot)
library(neuralnet)
library(caret)
library(rpart)
library(rpart.plot)
library(neuralnet)
# Ex1: Ler o arquivo CSV
ciclismo <- read.csv("ciclismo.csv", header = TRUE, sep = ",")
# One hot encoding
colunas_categoricas <- c("Team", "Background", "Continent")
dummy_obj <- dummyVars(~., data = ciclismo[, colunas_categoricas])
dados_encoded <- predict(dummy_obj, newdata = ciclismo)
# Transformar os dados encoded em dataframe
ciclismo_encoded <- as.data.frame(dados_encoded)
# Adicionar os atributos numéricos do dataframe ciclismo ao dataframe ciclismo_encoded
ciclismo_encoded$altitude_results <- ciclismo$altitude_results
ciclismo_encoded$vo2_results <- ciclismo$vo2_results
ciclismo_encoded$hr_results <- ciclismo$hr_results
ciclismo_encoded$age <- ciclismo$age
ciclismo_encoded$gender= ciclismo$gender
ciclismo_encoded$ProLevel = ciclismo$ProLevel
ciclismo_encoded$WinterTrainingCamp = ciclismo$WinterTrainingCamp
# Renomeando as colunas do dataframe
colnames(ciclismo_encoded) <- c('TeamgroupA', 'TeamgroupB', 'TeamgroupC', 'TeamgroupD', 'TeamgroupE', 'BackgroundCobblestones', 'BackgroundHill',
'BackgroundMountain', 'BackgroundNone', 'BackgroundSprinter', 'BackgroundTimeTrial', 'ContinentAfrica',
'ContinentAsia', 'ContinentAustralia', 'ContinentEurope', 'ContinentNorthAmerica', 'ContinentSouthAmerica',
'altitude_results', 'vo2_results', 'hr_results', 'age')
# garantir a reprodutibilidade dos resultados
set.seed(123)
# dataset exercício 3
datasetEx3 <- ciclismo_encoded
colnames(datasetEx3) <- c('TeamgroupA', 'TeamgroupB', 'TeamgroupC', 'TeamgroupD', 'TeamgroupE', 'BackgroundCobblestones', 'BackgroundHill',
'BackgroundMountain', 'BackgroundNone', 'BackgroundSprinter', 'BackgroundTimeTrial', 'ContinentAfrica',
'ContinentAsia', 'ContinentAustralia', 'ContinentEurope', 'ContinentNorthAmerica', 'ContinentSouthAmerica',
'altitude_results', 'vo2_results', 'hr_results', 'age')
# Convert the "age" column to numeric
datasetEx3$age <- as.numeric(datasetEx3$age)
# Check the type of data in the columns
sapply(datasetEx3[, c('altitude_results', 'vo2_results', 'hr_results', 'age')], class)
# Padronize the numeric variables
datasetEx3.norm <- as.data.frame(scale(datasetEx3[, c('altitude_results', 'vo2_results', 'hr_results', 'age')]))
sample <- sample(c(TRUE, FALSE), nrow(datasetEx3.norm), replace=TRUE, prob=c(0.7,0.3))
datasetEx3.norm.train <- datasetEx3.norm[sample,]
datasetEx3.norm.test <- datasetEx3.norm[!sample,]
train_labels <- datasetEx3.norm[sample, "gender"]
test_labels <- datasetEx3.norm[!sample, "gender"]
#-------------------------------
# 1 internal node
numnodes <- 1
nn_formula <- as.formula("gender ~ TeamgroupA + TeamgroupB + TeamgroupC + TeamgroupD + TeamgroupE + BackgroundCobblestones + BackgroundHill + BackgroundMountain +
BackgroundNone + BackgroundSprinter + BackgroundTimeTrial +
ContinentAfrica + ContinentAsia + ContinentAustralia + ContinentEurope + ContinentNorthAmerica + ContinentSouthAmerica + altitude_results + vo2_results +
hr_results + age + ProLevel + WinterTrainingCamp")
nn.model <-
neuralnet(
nn_formula,
data = datasetEx3.norm.train,
hidden = numnodes,
stepmax=1e7
)
# Definir diretório de trabalho
setwd("C:/Users/kefil/OneDrive/Documentos/anadi_1200625_1200628_1200882/TrabalhoPratico2")
# Bibliotecas
library(readr)
library(ggplot2)
library(dplyr)
library(lubridate)
library(reshape2)
library(corrplot)
library(neuralnet)
library(caret)
library(rpart)
library(rpart.plot)
library(neuralnet)
# Ex1: Ler o arquivo CSV
ciclismo <- read.csv("ciclismo.csv", header = TRUE, sep = ",")
# One hot encoding
colunas_categoricas <- c("Team", "Background", "Continent")
dummy_obj <- dummyVars(~., data = ciclismo[, colunas_categoricas])
dados_encoded <- predict(dummy_obj, newdata = ciclismo)
# Transformar os dados encoded em dataframe
ciclismo_encoded <- as.data.frame(dados_encoded)
# Adicionar os atributos numéricos do dataframe ciclismo ao dataframe ciclismo_encoded
ciclismo_encoded$altitude_results <- ciclismo$altitude_results
ciclismo_encoded$vo2_results <- ciclismo$vo2_results
ciclismo_encoded$hr_results <- ciclismo$hr_results
ciclismo_encoded$age <- ciclismo$age
ciclismo_encoded$gender= ciclismo$gender
ciclismo_encoded$ProLevel = ciclismo$ProLevel
ciclismo_encoded$WinterTrainingCamp = ciclismo$WinterTrainingCamp
# Renomeando as colunas do dataframe
colnames(ciclismo_encoded) <- c('TeamgroupA', 'TeamgroupB', 'TeamgroupC', 'TeamgroupD', 'TeamgroupE', 'BackgroundCobblestones', 'BackgroundHill',
'BackgroundMountain', 'BackgroundNone', 'BackgroundSprinter', 'BackgroundTimeTrial', 'ContinentAfrica',
'ContinentAsia', 'ContinentAustralia', 'ContinentEurope', 'ContinentNorthAmerica', 'ContinentSouthAmerica',
'altitude_results', 'vo2_results', 'hr_results', 'age')
# garantir a reprodutibilidade dos resultados
set.seed(123)
# dataset exercício 3
datasetEx3 <- ciclismo_encoded
colnames(datasetEx3) <- c('TeamgroupA', 'TeamgroupB', 'TeamgroupC', 'TeamgroupD', 'TeamgroupE', 'BackgroundCobblestones', 'BackgroundHill',
'BackgroundMountain', 'BackgroundNone', 'BackgroundSprinter', 'BackgroundTimeTrial', 'ContinentAfrica',
'ContinentAsia', 'ContinentAustralia', 'ContinentEurope', 'ContinentNorthAmerica', 'ContinentSouthAmerica',
'altitude_results', 'vo2_results', 'hr_results', 'age')
# Convert the "age" column to numeric
datasetEx3$age <- as.numeric(datasetEx3$age)
# Check the type of data in the columns
sapply(datasetEx3[, c('altitude_results', 'vo2_results', 'hr_results', 'age')], class)
# Padronize the numeric variables
datasetEx3.norm <- as.data.frame(scale(datasetEx3[, c('altitude_results', 'vo2_results', 'hr_results', 'age')]))
sample <- sample(c(TRUE, FALSE), nrow(datasetEx3.norm), replace=TRUE, prob=c(0.7,0.3))
datasetEx3.norm.train <- datasetEx3.norm[sample,]
datasetEx3.norm.test <- datasetEx3.norm[!sample,]
train_labels <- datasetEx3.norm[sample, "gender"]
test_labels <- datasetEx3.norm[!sample, "gender"]
#-------------------------------
# 1 internal node
numnodes <- 1
# Check the column names in datasetEx3.norm.train
colnames(datasetEx3.norm.train)
nn_formula <- as.formula("gender ~ TeamgroupA + TeamgroupB + TeamgroupC + TeamgroupD + TeamgroupE + BackgroundCobblestones + BackgroundHill + BackgroundMountain +
BackgroundNone + BackgroundSprinter + BackgroundTimeTrial +
ContinentAfrica + ContinentAsia + ContinentAustralia + ContinentEurope + ContinentNorthAmerica + ContinentSouthAmerica + altitude_results + vo2_results +
hr_results + age + ProLevel + WinterTrainingCamp")
nn.model <- neuralnet(
nn_formula,
data = datasetEx3.norm.train,
hidden = numnodes,
stepmax = 1e7
)
# Check the column names in datasetEx3.norm.train
colnames(datasetEx3.norm.train)
# Train and build the neural network model
numnodes <- 1
nn_formula <- as.formula("TargetColumnName ~ TeamgroupA + TeamgroupB + TeamgroupC + TeamgroupD + TeamgroupE + BackgroundCobblestones + BackgroundHill + BackgroundMountain +
BackgroundNone + BackgroundSprinter + BackgroundTimeTrial +
ContinentAfrica + ContinentAsia + ContinentAustralia + ContinentEurope + ContinentNorthAmerica + ContinentSouthAmerica + altitude_results + vo2_results +
hr_results + age + ProLevel + WinterTrainingCamp")
nn.model <- neuralnet(
nn_formula,
data = datasetEx3.norm.train,
hidden = numnodes,
stepmax = 1e7
)
View(datasetEx3.norm.train)
View(datasetEx3.norm.train)
# Bibliotecas necessárias
library(readr)
library(corrplot)
# Bibliotecas necessárias
library(readr)
library(corrplot)
library(ggplot2)
library(rpart)
library(rpart.plot)
library(neuralnet)
library(Metrics)
library(caret)
library(class)
library(FNN)
library(nortest)
library(moments)
# garantir a reprodutibilidade dos resultados
set.seed(123)
# dataset exercício 1
datasetEx1 <- ciclismo_encoded
# Ex1: Ler o arquivo CSV
ciclismo <- read.csv("ciclismo.csv", header = TRUE, sep = ",")
# One hot encoding
colunas_categoricas <- c("Team", "Background", "Continent")
dummy_obj <- dummyVars(~., data = ciclismo[, colunas_categoricas])
dados_encoded <- predict(dummy_obj, newdata = ciclismo)
# Transformar os dados encoded em dataframe
ciclismo_encoded <- as.data.frame(dados_encoded)
# Adicionar os atributos numéricos do dataframe ciclismo ao dataframe ciclismo_encoded
ciclismo_encoded$altitude_results <- ciclismo$altitude_results
ciclismo_encoded$vo2_results <- ciclismo$vo2_results
ciclismo_encoded$hr_results <- ciclismo$hr_results
ciclismo_encoded$age <- ciclismo$age
ciclismo_encoded$gender= ciclismo$gender
ciclismo_encoded$ProLevel = ciclismo$ProLevel
ciclismo_encoded$WinterTrainingCamp = ciclismo$WinterTrainingCamp
# garantir a reprodutibilidade dos resultados
set.seed(123)
# dataset exercício 1
datasetEx1 <- ciclismo_encoded
datasetEx1.norm <- as.data.frame(lapply(datasetEx1, normalise))
normalise <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
# dataset exercício 1
datasetEx1 <- ciclismo_encoded
datasetEx1.norm <- as.data.frame(lapply(datasetEx1, normalise))
View(datasetEx1)
View(datasetEx1)
